#!/bin/bash

how=${1:-"zip"}
echo how $how

stack build rhythmr

root=`stack path --local-install-root`
exe=$root/bin/rhythmr
app=Rhythmr.app
app_template=$app-template

# if [ -e "$app" ]; then
#   echo $app already exists
#   exit 1
# fi

rm -rf Rhythmr
mkdir Rhythmr
#fileicon set Rhythmr build/folder-icon.png

cp -r build/app-template/$app_template ./Rhythmr/$app
cp $exe Rhythmr/$app/Contents/MacOS/rhythmr

# Use dynamic libraries
mkdir Rhythmr/$app/Contents/Frameworks
for dylib in \
  /usr/local/opt/libsndfile/lib/libsndfile.1.dylib \
  /usr/local/opt/flac/lib/libFLAC.8.dylib \
  /usr/local/opt/libogg/lib/libogg.0.dylib \
  /usr/local/opt/libvorbis/lib/libvorbis.0.dylib \
  /usr/local/opt/libvorbis/lib/libvorbisenc.2.dylib \
  /usr/local/opt/portaudio/lib/libportaudio.2.dylib
do
    echo localizing $dylib
    cp $dylib Rhythmr/$app/Contents/Frameworks
    install_name_tool -change $dylib @loader_path/../Frameworks/$(basename $dylib) Rhythmr/$app/Contents/MacOS/rhythmr
done
otool -L Rhythmr/$app/Contents/MacOS/rhythmr

mkdir -p Rhythmr/Rhythmr.app/Contents/Resources
./build/generate-icns build/icon.png Rhythmr/Rhythmr.app/Contents/Resources/Rhythmr.icns

./build/generate-icns build/document-icon.png Rhythmr/Rhythmr.app/Contents/Resources/RhythmrDocument.icns

cp -r 60smotown.rhythmr Rhythmr
cp -r koop-it-again.rhythmr Rhythmr

case $how in
  zip)
    echo creating zip
    zip -r Rhythmr.zip Rhythmr
    rm -r Rhythmr
    ;;
  dmg)
    echo creating dmg
    hdiutil create -volname Rythmr -srcfolder Rhythmr -ov -format UDZO Rhythmr.dmg
    rm -r Rhythmr
    ;;
  folder)
    # Do nothing, just leave the app there
esac
